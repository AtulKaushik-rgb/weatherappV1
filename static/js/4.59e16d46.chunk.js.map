{"version":3,"sources":["components/Carditem/MediaCard.js","components/Temperature/Temperature.js","components/Home/Home.js"],"names":["useStyles","makeStyles","root","content","display","alignItems","justifyContent","flexDirection","height","Cards","props","data","classes","Card","className","CardActionArea","CardContent","Typography","gutterBottom","variant","component","temp","color","full","date","humidity","pressure","Temperature","React","memo","list","console","log","Dates","map","item","moment","unix","dt","format","Math","floor","main","temp_max","temp_min","unique","Map","values","Grid","container","alignContent","justify","spacing","direction","xs","sm","key","uuid","md","lg","Home","useState","setTemp","showTemp","setShowTemp","searchText","setSearchText","process","open","setOpen","handleClose","Title","backdrop","zIndex","search","width","margin","textField","marginBottom","getTemp","e","a","preventDefault","axios","get","response","Fallback","noValidate","autoComplete","onSubmit","TextField","type","label","value","onChange","target","Backdrop","onClick","CircularProgress"],"mappings":"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","file":"static/js/4.59e16d46.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // display:'flex',\r\n    // alignItems:'center',\r\n    // justifyContent:'center',\r\n\r\n  },\r\n  content:{\r\n    display:'flex',\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    flexDirection:'column',\r\n    height:'auto'\r\n  }\r\n});\r\n\r\nexport default function Cards(props) {\r\n\r\n\r\n  let data = props.data;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardContent className={classes.content}>\r\n          <Typography gutterBottom variant=\"h2\" component=\"h2\">\r\n           {data.temp}\r\n          </Typography>\r\n          <Typography variant=\"h4\" color=\"textSecondary\" component=\"p\">\r\n          {`${data.full}`}\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\r\n          {`${data.date}`}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {`Humidity: ${data.humidity}`}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {`Pressure: ${data.pressure}`}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MediaCard from \"../Carditem/MediaCard\";\r\nimport uuid from 'react-uuid';\r\n\r\n\r\nconst Temperature = React.memo((props) => {\r\n  let list = props;\r\n  console.log('loading...');\r\n\r\n// .main.   feels_like: 304.77\r\n// grnd_level: 994\r\n// humidity: 50\r\n// pressure: 1007\r\n// sea_level: 1007\r\n// temp: 303.53\r\n// temp_kf: 0.65\r\n// temp_max: 303.53\r\n// temp_min: 302.88\r\n\r\n  let Dates = list.temp.map((item) =>\r\n  {\r\n    return{\r\n      date: new moment.unix(item.dt).format(\"Do MMM, YY\"),\r\n      full:new moment.unix(item.dt).format(\"dddd\"),\r\n      temp: Math.floor(item.main.temp - 273.15)+'°C',\r\n      temp_max: Math.floor(item.main.temp_max - 273.15)+'°C',\r\n      temp_min: Math.floor(item.main.temp_min - 273.15)+'°C',\r\n      humidity:item.main.humidity,\r\n      pressure:item.main.pressure\r\n    }\r\n  }\r\n );\r\n\r\n const unique = [...new Map(Dates.map(item => [item['date'], item])).values()]\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        alignContent={\"center\"}\r\n        justify={\"center\"}\r\n        spacing={2}\r\n        direction={\"column\"}\r\n      >\r\n        <Grid item xs={false} sm={1}></Grid>\r\n        <Grid item xs={12} sm={10}>\r\n          <Grid container spacing={4}>\r\n            {unique.map((item) => (\r\n              <Grid key={uuid()} item xs={12} sm={6} md={4} lg={4}>\r\n                <MediaCard data={item}/>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={false} sm={1}></Grid>\r\n      </Grid>\r\n      {/* <Grid direction = {\"column\"} xs={2} lg={2} md={3}></Grid> */}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Temperature;\r\n","import React, { useState} from \"react\";\r\nimport Fallback from \"../../container/FallBack/Fallback\";\r\nimport Temperature from \"../Temperature/Temperature\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {makeStyles, Typography} from \"@material-ui/core\"\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst Home = () => {\r\n  const [temp, setTemp] = useState({});\r\n  const [showTemp, setShowTemp] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const {REACT_APP_API_URL} = process.env;\r\n  console.log(REACT_APP_API_URL);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n    },\r\n    Title:{\r\n      display:'flex',\r\n      justifyContent:'center',\r\n      alignItems:'center'\r\n    },\r\n    backdrop: {\r\n      zIndex:  1,\r\n      color: '#fff'\r\n    },\r\n    search:{\r\n      width:'50vw',\r\n      height:'100%',\r\n      display:'flex',\r\n      flexDirection:'row',\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n      margin:'10px auto'\r\n    },\r\n    textField:{\r\n      width:'100%',\r\n      marginBottom:'15px'\r\n    },\r\n    container:{\r\n      height:'8vh'\r\n      },\r\n\r\n  });\r\n\r\n  const getTemp = async (e) => {\r\n    e.preventDefault();\r\n    handleToggle();\r\n    setShowTemp(false);\r\n    //let key = process.env.REACT_APP_API_URL.toString();\r\n    let key1 = 'ee5669bc40a8113e9169782767118af3';\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${searchText}&appid=${key1}`\r\n      );\r\n      setTemp(response.data.list);\r\n      handleClose();\r\n      setShowTemp(true);\r\n      \r\n    } catch (error) {\r\n      console.log(\"error is thrown\", error);\r\n      setShowTemp(false);\r\n      return <Fallback />;\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <>\r\n    <Grid container spacing={2} className={classes.Title}>\r\n    <Typography  variant=\"h2\" color=\"textSecondary\" component=\"p\">\r\n        WeatherApp\r\n      </Typography>\r\n    </Grid>\r\n\r\n      <div className={classes.container}>\r\n        <div className={classes.search}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <form noValidate autoComplete=\"off\" onSubmit={getTemp}>\r\n                {/* <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" variant=\"outlined\" /> */}\r\n                <TextField\r\n                  className={classes.textField}\r\n                  type=\"search\"\r\n                  label=\"Search by city name\"\r\n                  value={searchText}\r\n                  onChange={(e) => setSearchText(e.target.value)}\r\n                />\r\n              </form>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      {showTemp ? <Temperature temp={temp} /> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}