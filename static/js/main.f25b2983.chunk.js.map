{"version":3,"sources":["container/FallBack/Fallback.js","App.js","reducer/RootReducer.js","index.js"],"names":["Fallback","props","errorMessage","message","className","Home","lazy","App","fallback","style","overflow","initialState","count","Reducer","state","action","console","log","type","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iHAAA,0BAmBeA,IAfE,SAAAC,GACb,IAAIC,EAAe,oDAKnB,OAJA,OAAGD,QAAH,IAAGA,IAAOA,EAAME,WAEhBD,EAAe,4BAAKD,EAAME,UAGtB,yBAAKC,UAAW,QACZ,yBAAKA,UAAY,SACZF,M,0KCVXG,EAAOC,gBAAK,kBAAM,uDAYTC,MAVf,WACE,OACE,kBAAC,WAAD,CAAUC,SAAUR,KACpB,yBAAKS,MAAO,CAACC,SAAS,WACpB,kBAACL,EAAD,S,QCTAM,EAAe,CACjBC,MAAO,GAwBIC,EArBC,WAA+B,IAA9BC,EAA6B,uDAAvBH,EAAaI,EAAU,uCAG1C,OADAC,QAAQC,IAAI,kBACLF,EAAOG,MAEV,IAAK,MACDJ,EAAMF,MAAQE,EAAMF,MAAQ,EAC5BI,QAAQC,IAAI,6BAA6BH,EAAMF,OAC/C,MAEJ,IAAK,YACDI,QAAQC,IAAI,eACZ,MAEJ,QACID,QAAQC,IAAI,2B,QCXVE,YAAYN,GAE1BO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACA,kBAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.f25b2983.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport \"./FallBack.css\";\r\n\r\nconst Fallback = props => {\r\n    let errorMessage = <h1>Something Went Wrong</h1>\r\n    if(props??props.message)\r\n    {\r\n    errorMessage = <h1>{props.message}</h1>\r\n    }\r\n    return (\r\n        <div className =\"blur\">\r\n            <div className = \"modal\">\r\n                {errorMessage}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Fallback;\r\n\r\n","import React, {lazy,Suspense } from \"react\";\nimport Fallback from './container/FallBack/Fallback'\n\nconst Home = lazy(() => import('../src/components/Home/Home'));\n\nfunction App() {\n  return (\n    <Suspense fallback={Fallback}>\n    <div style={{overflow:'hidden'}}>\n      <Home />\n    </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    count: 0,\r\n  };\r\n\r\nconst Reducer = (state=initialState,action) =>{\r\n\r\n    console.log(\"inside reducer\")\r\n    switch(action.type){\r\n\r\n        case \"add\":{\r\n            state.count = state.count + 1;\r\n            console.log(\"value of current count is \",state.count)\r\n            break;\r\n        }\r\n        case \"substract\":{\r\n            console.log(\"substracted\");\r\n            break;\r\n        }\r\n        default:\r\n            console.log(\"will never reach here\")\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport default Reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport Reducer from './reducer/RootReducer'\r\nimport {createStore} from 'redux'\r\n\r\nconst store = createStore(Reducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}